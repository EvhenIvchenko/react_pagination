{"version":3,"sources":["utils.ts","components/PageSizeSelect/PageSizeSelect.tsx","components/Pagination/Pagination.tsx","components/List/List.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","SelectValue","Pagination","total","perPage","currentPage","onPageChange","pagesNumbers","Math","ceil","mappedPagesNumbers","map","numb","className","cn","disabled","href","onClick","item","active","List","items","slice","name","id","PageSizeSelect","onChangeSize","defaultValue","onChange","value","THREE","FIVE","TEN","TWENTY","index","App","useState","itemsPerPage","setItemsPerPAge","selectedPage","setSelectedPage","startItem","endItem","min","length","event","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68498283.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","enum SelectValue {\n  THREE = 3,\n  FIVE = 5,\n  TEN = 10,\n  TWENTY = 20,\n}\n\ntype Props = {\n  perPage: number\n  onChangeSize: (event: React.ChangeEvent<HTMLSelectElement>) => void\n};\n\nexport const PageSizeSelect: React.FC<Props> = ({\n  perPage,\n  onChangeSize,\n}) => {\n  return (\n    <select\n      data-cy=\"perPageSelector\"\n      id=\"perPageSelector\"\n      className=\"form-control\"\n      defaultValue={perPage}\n      onChange={onChangeSize}\n    >\n      <option value={SelectValue.THREE}>{SelectValue.THREE}</option>\n      <option value={SelectValue.FIVE}>{SelectValue.FIVE}</option>\n      <option value={SelectValue.TEN}>{SelectValue.TEN}</option>\n      <option value={SelectValue.TWENTY}>{SelectValue.TWENTY}</option>\n    </select>\n  );\n};\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage : number,\n  currentPage?: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const pagesNumbers = Math.ceil(total / perPage);\n\n  const mappedPagesNumbers = getNumbers(1, pagesNumbers)\n    .map((numb: number) => numb);\n\n  const handlePrevPageClick = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPageClick = () => {\n    if (currentPage < pagesNumbers) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevPageClick}\n          >\n            «\n          </a>\n        </li>\n\n        {mappedPagesNumbers.map((item) => (\n          <li\n            className={cn(\n              'page-item',\n              { active: currentPage === item },\n            )}\n            key={item}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${item}`}\n              onClick={() => onPageChange(item)}\n            >\n              {item}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={\n            cn(\n              'page-item',\n              { disabled: currentPage === pagesNumbers },\n            )\n          }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pagesNumbers}\n            onClick={handleNextPageClick}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","interface Item {\n  name: string,\n  id: number,\n}\n\ntype Props = {\n  items: Item[],\n  perPage: number,\n  currentPage: number,\n};\n\nexport const List: React.FC<Props> = ({\n  items,\n  perPage,\n  currentPage,\n}) => {\n  return (\n    <ul>\n      {items.slice((currentPage - 1) * perPage, currentPage * perPage)\n        .map(item => (\n          <li data-cy=\"item\" key={item.id}>{item.name}</li>\n        ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { List } from './components/List';\nimport { PageSizeSelect } from './components/PageSizeSelect/PageSizeSelect';\n\nconst items = getNumbers(1, 42)\n  .map((n, index) => ({ name: `Item ${n}`, id: index }));\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPAge] = useState(5);\n  const [selectedPage, setSelectedPage] = useState(1);\n\n  const startItem = (selectedPage - 1) * itemsPerPage + 1;\n  const endItem = Math.min(selectedPage * itemsPerPage, items.length);\n\n  const handleOnPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedPage(1);\n    setItemsPerPAge(+event.target.value);\n  };\n\n  const handleOnClickChange = (page: number) => {\n    if (page !== selectedPage) {\n      setSelectedPage(page);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${startItem} - ${endItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <PageSizeSelect\n            perPage={itemsPerPage}\n            onChangeSize={handleOnPageChange}\n          />\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={selectedPage}\n        onPageChange={handleOnClickChange}\n      />\n\n      <List\n        items={items}\n        perPage={itemsPerPage}\n        currentPage={selectedPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}