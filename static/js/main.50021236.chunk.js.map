{"version":3,"sources":["components/PageSizeSelect/PageSizeSelect.tsx","components/Pagination/Pagination.tsx","components/List/List.tsx","App.tsx","utils.ts","index.tsx"],"names":["SelectValue","Pagination","total","perPage","currentPage","onPageChange","pagesNumbers","Math","ceil","mappedPagesNumbers","Array","fill","map","_","index","id","className","cn","disabled","href","onClick","item","active","List","items","slice","name","PageSizeSelect","onChangeSize","defaultValue","onChange","value","THREE","FIVE","TEN","TWENTY","from","to","numbers","n","push","getNumbers","App","useState","itemsPerPage","setItemsPerPAge","selectedPage","setSelectedPage","startItem","endItem","min","length","event","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50021236.chunk.js","sourcesContent":["enum SelectValue {\n  THREE = 3,\n  FIVE = 5,\n  TEN = 10,\n  TWENTY = 20,\n}\n\ntype Props = {\n  perPage: number\n  onChangeSize: (event: React.ChangeEvent<HTMLSelectElement>) => void\n};\n\nexport const PageSizeSelect: React.FC<Props> = ({\n  perPage,\n  onChangeSize,\n}) => {\n  return (\n    <select\n      data-cy=\"perPageSelector\"\n      id=\"perPageSelector\"\n      className=\"form-control\"\n      defaultValue={perPage}\n      onChange={(onChangeSize)}\n    >\n      <option value={SelectValue.THREE}>{SelectValue.THREE}</option>\n      <option value={SelectValue.FIVE}>{SelectValue.FIVE}</option>\n      <option value={SelectValue.TEN}>{SelectValue.TEN}</option>\n      <option value={SelectValue.TWENTY}>{SelectValue.TWENTY}</option>\n    </select>\n  );\n};\n","import cn from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage : number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesNumbers = Math.ceil(total / perPage);\n\n  const mappedPagesNumbers = new Array(pagesNumbers)\n    .fill(0).map((_, index) => ({ _, id: index + 1 }));\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={() => {\n              if (currentPage !== 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {mappedPagesNumbers.map((item) => (\n          <li\n            className={cn(\n              'page-item',\n              { active: currentPage === item.id },\n            )}\n            key={item.id}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${item.id}`}\n              onClick={() => onPageChange(item.id)}\n            >\n              {item.id}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={\n            cn(\n              'page-item',\n              { disabled: currentPage === pagesNumbers },\n            )\n          }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pagesNumbers ? 'true' : 'false'}\n            onClick={() => {\n              if (currentPage < pagesNumbers) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","interface Item {\n  name: string,\n  id: number,\n}\n\ntype Props = {\n  items: Item[],\n  perPage: number,\n  currentPage: number,\n};\n\nexport const List: React.FC<Props> = ({\n  items,\n  perPage,\n  currentPage,\n}) => {\n  return (\n    <ul>\n      {items.slice((currentPage - 1) * perPage, currentPage * perPage)\n        .map(item => (\n          <li data-cy=\"item\" key={item.id}>{item.name}</li>\n        ))}\n    </ul>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { List } from './components/List';\nimport { PageSizeSelect } from './components/PageSizeSelect/PageSizeSelect';\n\nconst items = getNumbers(1, 42)\n  .map((n, index) => ({ name: `Item ${n}`, id: index }));\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPAge] = useState(5);\n  const [selectedPage, setSelectedPage] = useState(1);\n\n  const startItem = (selectedPage - 1) * itemsPerPage + 1;\n  const endItem = Math.min(selectedPage * itemsPerPage, items.length);\n\n  const handleOnPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedPage(1);\n    setItemsPerPAge(+event.target.value);\n  };\n\n  const handleOnClickChange = (page: number) => {\n    if (page !== selectedPage) {\n      setSelectedPage(page);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${startItem} - ${endItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <PageSizeSelect\n            perPage={itemsPerPage}\n            onChangeSize={handleOnPageChange}\n          />\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={selectedPage}\n        onPageChange={handleOnClickChange}\n      />\n\n      <List\n        items={items}\n        perPage={itemsPerPage}\n        currentPage={selectedPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}